package br.edu.unifametro.aluno.agendeja.mapper;

import br.edu.unifametro.aluno.agendeja.domain.user.User;
import br.edu.unifametro.aluno.agendeja.request.user.UserPostRequestBody;
import org.mapstruct.Mapper;
import org.mapstruct.factory.Mappers;

/**
 * UserMapper is an interface for mapping between different user-related objects,
 * specifically converting {@link UserPostRequestBody} to {@link User}.
 * It leverages MapStruct to automatically generate the implementation at compile time.
 * <p>
 * Annotations:
 * - @Mapper: Marks this interface as a MapStruct mapper and enables the automatic implementation of mapping methods.
 * The `componentModel = "spring"` makes the generated mapper a Spring-managed bean, allowing it to be injected using Spring's dependency injection.
 * <p>
 * Fields:
 * - INSTANCE: A static instance of the {@link UserMapper} interface, provided by MapStruct's {@link Mappers#getMapper(Class)} method.
 * <p>
 * Methods:
 * - postRequestBodyToUser: Converts a {@link UserPostRequestBody} to a {@link User} entity.
 */

@Mapper(componentModel = "spring")
public interface UserMapper {

    /**
     * A static instance of the {@link UserMapper}, generated by MapStruct.
     * This instance can be used to perform mappings between UserPostRequestBody and User objects.
     */

    UserMapper INSTANCE = Mappers.getMapper(UserMapper.class);

    /**
     * Converts a {@link UserPostRequestBody} object to a {@link User} entity.
     * This method is automatically implemented by MapStruct during compile time.
     *
     * @param userPostRequestBody The {@link UserPostRequestBody} object containing the user data.
     * @return The {@link User} entity created from the provided userPostRequestBody data.
     */

    User postRequestBodyToUser(UserPostRequestBody userPostRequestBody);
}